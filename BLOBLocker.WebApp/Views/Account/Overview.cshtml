@model BLOBLocker.Entities.Models.WebApp.Account
@{
    ViewBag.Title = HttpContext.GetGlobalResourceObject(null, "PageTitle.AccountOverview");
}

<div class="menu-centered">
    <ul class="menu">
        <li>
            <a href="@Request.RawUrl" class="hollow button">
                @ViewBag.Title
            </a>
        </li>
        <li>
            @Html.ActionLink(HttpContext.GetGlobalResourceObject(null, "Label.ChangePassword").ToString(), "ChangePassword", null, new { @class = "button" })
        </li>
    </ul>
</div>



<p>Here does the user get an overview of his account status, some options and so on.</p>
Some cool stuff would be
<ul>
    <li>2-Factor Authentication</li>
    <li>Account Lock in between a timespan (like 20:00 - 16:30)? Evaluation needed</li>
    <li>Change/Set contact email</li>
    <li>Backup key option to prevent data loss through password loss</li>
    <li>Login through a key file</li>
</ul>

<hr />
Account Information
<table>
    <tr>
        <td>@Html.LabelFor(p => p.ID)</td>
        <td>@Html.ValueFor(p => p.ID)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.Alias)</td>
        <td>@Html.ValueFor(p => p.Alias)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.IsEnabled)</td>
        <td>@Html.ValueFor(p => p.IsEnabled)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.Roles)</td>
        <td>
            @foreach(var role in Model.Roles) { <text>@role.Role.Definition,</text> }
        </td>
    </tr>
</table>

<hr />
Additional
<table>
    <tr>
        <td>@Html.LabelFor(p => p.Addition.ContactEmail)</td>
        <td>@Html.ValueFor(p => p.Addition.ContactEmail)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.Addition.Contacts)</td>
        <td>
            @foreach (var contact in Model.Addition.Contacts)
            { <text>@contact.Account.Alias,</text> }
        </td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.Addition.CreatedOn)</td>
        <td>@Html.ValueFor(p => p.Addition.CreatedOn)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.Addition.LastFailedLogin)</td>
        <td>@Html.ValueFor(p => p.Addition.LastFailedLogin)</td>
    </tr>
</table>
<hr />
Your memory pool
<table>
    <tr>
        <td>@Html.LabelFor(p => p.MemoryPool.BasicSpace)</td>
        <td>@Html.ValueFor(p => p.MemoryPool.BasicSpace)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.MemoryPool.AdditionalSpace)</td>
        <td>@Html.ValueFor(p => p.MemoryPool.AdditionalSpace)</td>
    </tr>
    <tr>
        <td>@Html.LabelFor(p => p.MemoryPool.AssignedMemory)</td>
        <td>@Model.MemoryPool.AssignedMemory.Where(p => p.IsEnabled).Select(q => q.Space).Sum()</td>
    </tr>
</table>
